{
  "createdAt": "2025-08-27T13:13:14.300Z",
  "updatedAt": "2025-09-08T14:12:57.000Z",
  "id": "1N35QZWrpVwWs6n4",
  "name": "Ad_Creative_designer.json",
  "active": false,
  "isArchived": true,
  "nodes": [
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "description"
            },
            {
              "name": "Image"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -240,
        240
      ],
      "id": "f61394df-b4c0-4bd7-afd8-fb5d013637b2",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4.1-mini-2025-04-14",
          "mode": "list",
          "cachedResultName": "GPT-4.1-MINI-2025-04-14"
        },
        "messages": {
          "values": [
            {
              "content": "={{ $json.description }}\n\nImage: {{ $json.Image }}\nImage description: {{ $json.description }}\n\nYou are “AdVision-AI”, a senior performance-marketing art director.\nInput: productName, targetAudience, keyBenefit, brandPalette (optional), platform (“facebook”, “instagram”, “linkedin”, “stories”), tone (“playful”, “premium”, etc.).\nTask: Produce one high-impact ad-image prompt (≤ 100 words).\nAutomatically decide:\n• Concept: lifestyle hero, product in-use, bold typographic poster or cinematic close-up — choose what best sells the keyBenefit to targetAudience.\n• Art style & camera: photoreal flat-lay, isometric 3-D, retro comic, neon cyber-punk, etc.\n• Composition: focal object on rule-of-third vertex, 15 % safe space for copy overlay.\n• Colour: apply accessible contrast; if brandPalette missing, derive triadic or complementary scheme that fits tone.\n• Lighting: soft studio, natural window 45°, dramatic rim — whichever maximises scroll-stop power.\n• Technical: aspect 1.91:1 (or 9:16 if platform = “stories”), 4-K.\n• Finish with negative prompt:\n--no pixelation, logo clutter, irrelevant props, off-brand colours, heavy text, watermark.\n\nReturn that single prompt line.\n\nImportant:\nYour prompt output should be in plain text and not marked with PROMPT at the beginning. just output raw text. please note that this is going inside of a json body so avoid any punctuation that could mess it up like \"'('\""
            },
            {
              "content": "You are “AdVision-AI-IMG”, a senior performance-marketing art director who must embed an unaltered product photo into every creative.\nInput JSON:\nproductName, targetAudience, keyBenefit, brandPalette (optional), platform (“facebook”, “instagram”, “linkedin”, “stories”), tone (“playful”, “premium”, etc.), productImageRef (direct reference or URL to the supplied image).\n\nTask: Return one single-line prompt (≤ 110 words) for an image-generation model that combines fresh background, layout and styling while preserving the supplied product photo exactly (colour, proportions, orientation).\n\nEmbed these expert rules automatically — never ask follow-up questions:\n• Hero concept: position productImageRef on the rule-of-thirds focal point best suited to platform (centre-right for feed, lower-third for Stories).\n• Integrity: instruct the model not to crop, recolour, warp, or overlay text on the photo; allow only a soft drop-shadow or subtle reflection beneath it.\n• Surroundings: generate a complementary backdrop/environment and supporting graphic elements (abstract gradient, dynamic shapes, lifestyle setting) that amplify the keyBenefit for targetAudience.\n• Colour: derive palette from brandPalette; if missing, craft a high-contrast complementary scheme that matches tone and does not clash with dominant hues in the photo.\n• Text-safe area: reserve 15 % of frame as negative space for headline overlay (leave transparent/blank).\n• Lighting & depth: choose a lighting style (soft studio, cinematic rim, natural window) that highlights the real photo without casting mismatched shadows.\n• Technical:\n– Aspect ratio → 1.91:1 for feed; 9:16 if platform = “stories”.\n– Resolution → 4-K or higher.\n– Specify “embed provided image unchanged” for engines that accept image-prompt references (e.g., ControlNet, DALL-E 3 image insertion).\n• Negative prompt (append verbatim):\n\n\nReturn that single prompt line.\n\nImportant:\nYour prompt output should be in plain text and not marked with PROMPT at the beginning. just output raw text. please note that this is going inside of a json body so avoid any punctuation that could mess it up like \"'('\"",
              "role": "system"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        240,
        80
      ],
      "id": "f2432acc-4a61-440d-81cb-5b1b7852e374",
      "name": "Prompt gen",
      "credentials": {
        "openAiApi": {
          "id": "NSQH7jdDrTIGJRAn",
          "name": "Automation learner pro"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/images/generations",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "<api key>"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"model\": \"gpt-image-1\",\n    \"prompt\": \"{{ $json.message.content }}\",\n    \"n\": 1,\n    \"size\": \"1024x1024\"\n  }",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        592,
        80
      ],
      "id": "4cc578c2-b774-46d6-ab71-287bafe86f74",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "data[0].b64_json",
        "options": {}
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        768,
        80
      ],
      "id": "fb9ca725-dc86-4a1a-8bbc-ece2c8814b40",
      "name": "Convert to File"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "da638934-4e21-4bf8-96ff-20da940a3f52",
              "name": "webViewLink",
              "value": "={{ $json.webViewLink }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1120,
        80
      ],
      "id": "1f8fd885-6cef-4ad3-a6ed-7b666c3604ea",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.Image }}",
                    "rightValue": "no image",
                    "operator": {
                      "type": "string",
                      "operation": "notEquals"
                    },
                    "id": "f02079ee-2ef9-4ed2-8055-670799e4dfa7"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Image"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "a3a6201f-aeaf-4942-bbe7-bae3f3a75738",
                    "leftValue": "={{ $json.Image }}",
                    "rightValue": "no image",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "No image"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -16,
        240
      ],
      "id": "6410824f-9d94-40e8-a368-0602d7e8263e",
      "name": "Switch"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4.1-mini-2025-04-14",
          "mode": "list",
          "cachedResultName": "GPT-4.1-MINI-2025-04-14"
        },
        "messages": {
          "values": [
            {
              "content": "={{ $json.description }}"
            },
            {
              "content": "You are “AdVision-AI”, a senior performance-marketing art director.\nInput: productName, targetAudience, keyBenefit, brandPalette (optional), platform (“facebook”, “instagram”, “linkedin”, “stories”), tone (“playful”, “premium”, etc.).\nTask: Produce one high-impact ad-image prompt (≤ 100 words).\nAutomatically decide:\n• Concept: lifestyle hero, product in-use, bold typographic poster or cinematic close-up — choose what best sells the keyBenefit to targetAudience.\n• Art style & camera: photoreal flat-lay, isometric 3-D, retro comic, neon cyber-punk, etc.\n• Composition: focal object on rule-of-third vertex, 15 % safe space for copy overlay.\n• Colour: apply accessible contrast; if brandPalette missing, derive triadic or complementary scheme that fits tone.\n• Lighting: soft studio, natural window 45°, dramatic rim — whichever maximises scroll-stop power.\n• Technical: aspect 1.91:1 (or 9:16 if platform = “stories”), 4-K.\n• Finish with negative prompt:\n--no pixelation, logo clutter, irrelevant props, off-brand colours, heavy text, watermark.\n\nReturn that single prompt line.\n\nImportant:\nYour prompt output should be in plain text and not marked with PROMPT at the beginning. just output raw text. please note that this is going inside of a json body so avoid any punctuation that could mess it up like \"'('\"",
              "role": "system"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        240,
        384
      ],
      "id": "7df47608-7010-4762-845d-c8bbf5585a4b",
      "name": "Prompt gen1",
      "credentials": {
        "openAiApi": {
          "id": "JVlesJneQfklZxTz",
          "name": "Free Api"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/images/generations",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "<api key>"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"model\": \"gpt-image-1\",\n    \"prompt\": \"{{ $json.message.content }}\",\n    \"n\": 1,\n    \"size\": \"1024x1024\"\n  }",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        592,
        384
      ],
      "id": "46241db3-e50b-4145-8738-1888f5cda8e0",
      "name": "HTTP Request1"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "data[0].b64_json",
        "options": {}
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        768,
        384
      ],
      "id": "4c1c09a3-fb3e-4502-911a-4d4e19f58613",
      "name": "Convert to File1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "da638934-4e21-4bf8-96ff-20da940a3f52",
              "name": "webViewLink",
              "value": "={{ $json.webViewLink }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1120,
        384
      ],
      "id": "c5cfe572-327d-4d85-b71b-b1d38b4789bf",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "name": "Image",
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "value": "1XuoFVb96OH2FthcHKxxKy7MMm01qKHEG",
          "mode": "list",
          "cachedResultName": "Ai Resources",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1XuoFVb96OH2FthcHKxxKy7MMm01qKHEG"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        944,
        80
      ],
      "id": "97e34c41-4172-406e-93fe-ddba61488e99",
      "name": "Upload file",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "eMBg8QrZHMSKG9cA",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "name": "Image",
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "value": "1XuoFVb96OH2FthcHKxxKy7MMm01qKHEG",
          "mode": "list",
          "cachedResultName": "Ai Resources",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1XuoFVb96OH2FthcHKxxKy7MMm01qKHEG"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        944,
        384
      ],
      "id": "d7844664-eea1-4e1d-b003-66a2d0ef1f66",
      "name": "Upload file1",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "eMBg8QrZHMSKG9cA",
          "name": "Google Drive account"
        }
      }
    }
  ],
  "connections": {
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prompt gen": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "Upload file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Prompt gen",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Prompt gen1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prompt gen1": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "Convert to File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File1": {
      "main": [
        [
          {
            "node": "Upload file1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload file": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload file1": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "84c4b3cf-0229-4acf-a8fc-0adc8fff9718",
  "triggerCount": 0,
  "tags": [
    {
      "createdAt": "2025-08-27T13:11:01.943Z",
      "updatedAt": "2025-08-27T13:11:01.943Z",
      "id": "Bp6PWiOVf8YhVtLP",
      "name": "Graphic design"
    }
  ]
}
