{
  "createdAt": "2025-08-05T08:04:24.954Z",
  "updatedAt": "2025-08-27T12:40:45.000Z",
  "id": "HTiYM6JcmDFinv2r",
  "name": "Personal learning tutor",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        -464,
        352
      ],
      "id": "cfd81e95-81e1-42af-839b-8a4d6a8425be",
      "name": "Telegram Trigger",
      "webhookId": "148bc8a9-a549-416d-a1f8-ba120e6958f8",
      "credentials": {
        "telegramApi": {
          "id": "lodIyBtxAtORSIXq",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.document.file_name }}",
                    "rightValue": "pdf",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    },
                    "id": "2a896b40-e4bd-40ee-92bf-4ff937cac07c"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "pdf"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "fa5feee3-bdaf-43c6-90d7-66c40d07bbfb",
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "notEmpty",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -240,
        352
      ],
      "id": "80b41417-4b0d-4c12-9dfc-ca4b4b02464f",
      "name": "Switch"
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.document.file_id }}"
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        208,
        144
      ],
      "id": "7db6c178-2f50-427e-afc9-187289daae76",
      "name": "Get a file",
      "webhookId": "3199014d-f376-4681-b3e6-cb2d77d05f3c",
      "credentials": {
        "telegramApi": {
          "id": "lodIyBtxAtORSIXq",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "mode": "insert",
        "pineconeIndex": {
          "__rl": true,
          "value": "rag3",
          "mode": "list",
          "cachedResultName": "rag3"
        },
        "embeddingBatchSize": 1000,
        "options": {
          "pineconeNamespace": "pdf"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "typeVersion": 1.3,
      "position": [
        880,
        144
      ],
      "id": "ddd36618-1ad1-475b-b0ca-18b734bd05f4",
      "name": "Pinecone Vector Store",
      "credentials": {
        "pineconeApi": {
          "id": "QljHiMVrhSXctuDZ",
          "name": "PineconeApi "
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        864,
        368
      ],
      "id": "acd5032a-415d-4b08-8428-2416733fa734",
      "name": "Embeddings OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "NSQH7jdDrTIGJRAn",
          "name": "Automation learner pro"
        }
      }
    },
    {
      "parameters": {
        "dataType": "binary",
        "options": {}
      },
      "id": "2e495f7e-116e-4835-b5af-ee55d5c81cce",
      "name": "Default Data Loader",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "position": [
        992,
        368
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "chunkSize": 5000,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        1088,
        576
      ],
      "id": "a7c301ab-bad2-4aea-9b02-e7800fb5ec6b",
      "name": "Recursive Character Text Splitter"
    },
    {
      "parameters": {
        "jsCode": "// Function to correct MIME type\nconst item = $input.first();\n\n// Check if we have binary data\nif (item.binary && Object.keys(item.binary).length > 0) {\n  const binaryKey = Object.keys(item.binary)[0];\n  const binaryData = item.binary[binaryKey];\n\n  // Determine correct MIME type based on file extension\n  let correctMimeType = 'application/pdf'; // Set default to PDF\n  if (binaryData.fileName) {\n    const extension = binaryData.fileName.split('.').pop().toLowerCase();\n    if (extension === 'pdf') correctMimeType = 'application/pdf';\n    if (extension === 'png') correctMimeType = 'image/png';\n    if (extension === 'jpg' || extension === 'jpeg') correctMimeType = 'image/jpeg';\n  }\n\n  // Update the MIME type\n  item.binary[binaryKey].mimeType = correctMimeType;\n\n  // Log for debugging\n  console.log(`Updated MIME type to: ${correctMimeType} for file: ${binaryData.fileName}`);\n}\n\nreturn item;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        640,
        144
      ],
      "id": "63dddae7-8441-4503-8c87-c093b88c3eca",
      "name": "Code"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.message.text }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        16,
        544
      ],
      "id": "49db2d27-2b25-4f1f-bf7e-583ff694a92c",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -16,
        768
      ],
      "id": "4217461b-f90b-406a-a197-1273c6a8f490",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "NSQH7jdDrTIGJRAn",
          "name": "Automation learner pro"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.message.from.id }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        112,
        768
      ],
      "id": "cc476db3-b1f9-46e6-a2ed-0027f30163dd",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolDescription": "your jod is to help with education content",
        "pineconeIndex": {
          "__rl": true,
          "value": "rag3",
          "mode": "list",
          "cachedResultName": "rag3"
        },
        "options": {
          "pineconeNamespace": "pdf"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "typeVersion": 1.3,
      "position": [
        240,
        768
      ],
      "id": "cca13a5c-e901-4886-b6d1-5d45dcac72ad",
      "name": "Pinecone Vector Store1",
      "credentials": {
        "pineconeApi": {
          "id": "QljHiMVrhSXctuDZ",
          "name": "PineconeApi "
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        336,
        976
      ],
      "id": "e4460ff4-c16a-4a46-b10c-849a15894e4e",
      "name": "Embeddings OpenAI1",
      "credentials": {
        "openAiApi": {
          "id": "NSQH7jdDrTIGJRAn",
          "name": "Automation learner pro"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{$('Switch').item.json.message.chat.id }}",
        "text": "={{ $json.output }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        640,
        544
      ],
      "id": "b1a6c9c4-d771-4380-8bc3-7645c7f5e275",
      "name": "Send a text message",
      "webhookId": "9d7d4c03-8d71-4a31-a84f-ae9f15566c5b",
      "credentials": {
        "telegramApi": {
          "id": "lodIyBtxAtORSIXq",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{$('Switch').item.json.message.chat.id }}",
        "text": "=Hey, Aditya, your document {{ $json.message.document.file_name }} has been successfully uploaded.",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1616,
        144
      ],
      "id": "e35d710f-5379-418e-9ab3-9a8a55f2a491",
      "name": "Send a text message1",
      "webhookId": "9d7d4c03-8d71-4a31-a84f-ae9f15566c5b",
      "credentials": {
        "telegramApi": {
          "id": "lodIyBtxAtORSIXq",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        1392,
        144
      ],
      "id": "e6e0d558-ea12-49ad-bfef-fbe20e4c9d11",
      "name": "Limit"
    }
  ],
  "connections": {
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Get a file",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a file": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Pinecone Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Pinecone Vector Store",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Recursive Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Pinecone Vector Store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Pinecone Vector Store1": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI1": {
      "ai_embedding": [
        [
          {
            "node": "Pinecone Vector Store1",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Send a text message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pinecone Vector Store": {
      "main": [
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit": {
      "main": [
        [
          {
            "node": "Send a text message1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "9b56e552-fa4e-4f0f-93be-5a70a232930a",
  "triggerCount": 1,
  "tags": []
}
